feat: adiciona funcionalidade de login com Google

fix: corrige bug no cálculo de impostos

docs: atualiza README com instruções de instalação

refactor: simplifica lógica de verificação de CPF

style: ajusta identação e remove espaços em branco

test: adiciona testes para componente de autenticação

chore: atualiza dependências do projeto

build: configura script de build para produção

ci: corrige pipeline de testes no GitHub Actions

revert: reverte commit 2a3b4c5 por erro na lógica

 

 JSON ANIMAIS 

{
  "numero_animal": "TEeeeeeste",
  "nome_animal": "Bela",
  "raca": "Holandesa",
  "sexo": "F",
  "data_nascimento": "2020-05-12",
  "peso_kg": 520.5,
  "cor": "Preta e Branca",
  "statuss": "Ativa",
  "estado_saude": "Excelente",
  "ultima_vacinacao": "2025-02-15",
  "proxima_vacinacao": "2025-08-15",
  "status_reprodutivo": "Lactante",
  "producao_diaria_litros": 28.4,
  "foto": "https://meuservidor.com/fotos/bela.jpg",
  "observacoes": "Animal saudável e de alta produção",
  "criado_em": "2025-08-12 10:30:00"
}



JSON USUARIO 

{
  "nome": "João Silva",
  "email": "joao.silvaaa@example.com",
  "senha": "minhasenha123",
  "cargo": "gerente",
  "telefone": "(67) 99999-8888",
  "endereco": "Rua das Flores, 123",
  "cidade": "Dourados",
  "estado": "MS",
  "cep": "79800-000"
}



JSON LEITE 

{
  "data_producao": "2025-08-12",
  "quantidade_litros": 250.5,
  "responsavel": "Maria Souza",
  "turno": "Manhã",
  "tipo_leite": "Integral",
  "qualidade": "A+",
  "temperatura": 3.5,
  "equipamento_utilizado": "Ordenha mecânica 1",
  "animais_contribuintes": "{\"1\",\"2\",\"5\"}",
  "local_armazenamento": "Tanque de resfriamento 1",
  "observacao": "Produção normal, sem ocorrências"
}


JSON DELETE LEITE 

Metodo DELETE

http://localhost:8001/deleteleite

{
  "id": 1
}



video

teste de USUARIO
"Funcionario

{
  "nome": "João Souza",
  "email": "joao.souza@teste.com",
  "senha": "123456",
  "cargo": "funcionario",
  "telefone": "67999998888",
  "endereco": "Rua Central, 456",
  "cidade": "Dourados",
  "estado": "MS",
  "cep": "79800-001"
}

gerente
{
  "nome": "João Souza",
  "email": "joao.souza@teste.com",
  "senha": "123456",
  "cargo": "gerente",
  "telefone": "67999998888",
  "endereco": "Rua Central, 456",
  "cidade": "Dourados",
  "estado": "MS",
  "cep": "79800-001"
}



LOGIN 
{
  "email": "joao.souza@teste.com",
  "senha": "123456"
}


ANIMAL

{
  "numero_animal": "00000002",
  "nome_animal": "Aurora",
  "raca": "Holandesa",
  "sexo": "F",
  "data_nascimento": "2022-04-10",
  "peso_kg": 465.2,
  "cor": "Preta e Branca",
  "statuss": "Ativa",
  "estado_saude": "Boa",
  "ultima_vacinacao": "2025-07-10",
  "proxima_vacinacao": "2025-12-10",
  "status_reprodutivo": "Lactante",
  "producao_diaria_litros": 21.8,
  "observacoes": "Sem intercorrências recentes"
}

PUT

http://localhost:8001/vaca/id
{
  "numero": "99999999",
  "nome": "Pedra",
  "raca": "Holandesa",
  "descricao": "Sem intercorrências recentes"
}

ver id
http://localhost:8001/vacas





<?php

namespace App\model;

use PDO;
use Exception;


class Lucro
{
    private $pdo;

    public function __construct($db)
    {
        $this->pdo = $db;
    }

     public function create(
        $data_receita = null,
        $categoria = null,
        $fonte_receita = null,
        $cliente = null,
        $descricao = null,
        $quantidade = null,
        $preco_unitario = null,
        $valor_total = null,
        $numero_nfe = null,
        $metodo_pagamento = null,
        $status_pagamento = null,
        $data_vencimento = null,
        $data_pagamento = null,
        $observacoes = null
    ) {
        $sql = "INSERT INTO lucro (
            data_receita,
            categoria,
            fonte_receita,
            cliente,
            descricao,
            quantidade,
            preco_unitario,
            valor_total,
            numero_nfe,
            metodo_pagamento,
            status_pagamento,
            data_vencimento,
            data_pagamento,
            observacoes
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        $stmt = $this->pdo->prepare($sql);

        return $stmt->execute([
            $data_receita,
            $categoria,
            $fonte_receita,
            $cliente,
            $descricao,
            $quantidade,
            $preco_unitario,
            $valor_total,
            $numero_nfe,
            $metodo_pagamento,
            $status_pagamento,
            $data_vencimento,
            $data_pagamento,
            $observacoes
        ]);
    }

   
    public function update(
    $id,
    $data_receita = null,
    $categoria = null,
    $fonte_receita = null,
    $cliente = null,
    $descricao = null,
    $quantidade = null,
    $preco_unitario = null,
    $valor_total = null,
    $numero_nfe = null,
    $metodo_pagamento = null,
    $status_pagamento = null,
    $data_vencimento = null,
    $data_pagamento = null,
    $observacoes = null
) {
    $sql = "UPDATE lucro SET
        data_receita = ?,
        categoria = ?,
        fonte_receita = ?,
        cliente = ?,
        descricao = ?,
        quantidade = ?,
        preco_unitario = ?,
        valor_total = ?,
        numero_nfe = ?,
        metodo_pagamento = ?,
        status_pagamento = ?,
        data_vencimento = ?,
        data_pagamento = ?,
        observacoes = ?
    WHERE id = ?";

    $stmt = $this->pdo->prepare($sql);

    return $stmt->execute([
        $data_receita,
        $categoria,
        $fonte_receita,
        $cliente,
        $descricao,
        $quantidade,
        $preco_unitario,
        $valor_total,
        $numero_nfe,
        $metodo_pagamento,
        $status_pagamento,
        $data_vencimento,
        $data_pagamento,
        $observacoes,
        $id
    ]);
}

    public function getById($id)
{
    $stmt = $this->pdo->prepare("SELECT * FROM lucro WHERE id = ?");
    $stmt->execute([$id]);
    return $stmt->fetch(PDO::FETCH_ASSOC);
}


    public function getAllLucros()
    {
        $stmt = $this->pdo->prepare("SELECT * FROM lucro");
        $stmt->execute();

        $lucros = [];
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $lucros[] = $row;
        }

        return $lucros;
    }

    public function delete($id)
    {
        $stmt = $this->pdo->prepare("DELETE FROM lucro WHERE id = ?");
        return $stmt->execute([$id]);
    }
}
   









